{"version":3,"sources":["App.js","actions/index.js","reducers/counter.js","reducers/isLogged.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","myCounter","userLogged","isLogged","dispatch","useDispatch","onClick","type","payLoad","increment","counterReducer","action","loggedReducer","allReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"wLAoBeA,MAhBf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAGA,EAAMC,aACpCC,EAAaH,aAAY,SAAAC,GAAK,OAAGA,EAAMG,YACvCC,EAAWC,cAEjB,OACE,qCACE,8CAAiBP,KACjB,wBAAQQ,QAAS,kBAAKF,ECZH,WACvB,MAAO,CACLG,KAAM,YACNC,QAHkC,uDAAN,GDYKC,CAAU,KAAzC,eACA,wBAAQH,QAAS,kBAAKF,ECLnB,CACLG,KAAM,eDIJ,eACA,wBAAQD,QAAS,kBAAKF,ECAnB,CACLG,KAAM,aDDJ,oBACCL,GAAc,+C,OEJNQ,EAXQ,WAAsB,IAArBV,EAAoB,uDAAd,EAAGW,EAAW,uCAC1C,OAAQA,EAAOJ,MACb,IAAK,YACH,OAAOP,EAAQW,EAAOH,QACxB,IAAK,YACH,OAAOR,EAAQ,EACjB,QACE,OAAOA,ICEEY,EATO,WAA4B,IAA3BZ,EAA0B,wDAAXW,EAAW,uCAC/C,OAAQA,EAAOJ,MACb,IAAK,UACH,OAAQP,EACV,QACE,OAAOA,ICIEa,EALIC,YAAgB,CACjCb,UAAWS,EACXP,SAAUS,ICENG,EAAQC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SAAwB,cAAC,EAAD,MACxBM,SAASC,eAAe,W","file":"static/js/main.ba455f94.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, decrement, loggedIn } from './actions';\n\nfunction App() {\n  const counter = useSelector(state=> state.myCounter);\n  const userLogged = useSelector(state=> state.isLogged);\n  const dispatch = useDispatch();\n  \n  return (\n    <>\n      <h1>My state is {counter}</h1>\n      <button onClick={()=> dispatch(increment(1))}>+</button>\n      <button onClick={()=> dispatch(decrement())}>-</button>\n      <button onClick={()=> dispatch(loggedIn())}>log in</button>\n      {userLogged && <h1>Some text</h1>}\n    </>    \n  );\n}\n\nexport default App;\n","export const increment = (num = 1) => {\n  return {\n    type: 'INCREMENT',\n    payLoad: num,\n  }\n}\n\nexport const decrement = () => {\n  return {\n    type: 'DECREMENT',\n  }\n}\n\nexport const loggedIn = () => {\n  return {\n    type: 'SIGN_IN',\n  }\n}","const counterReducer = (state=1, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + action.payLoad;\n    case 'DECREMENT':  \n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nexport default counterReducer;","const loggedReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return !state; \n    default:\n      return state;\n  }\n}\n\nexport default loggedReducer;","import counterReducer from './counter';\nimport loggedReducer from './isLogged';\nimport { combineReducers } from 'redux';\n\nconst allReducer = combineReducers({\n  myCounter: counterReducer,\n  isLogged: loggedReducer\n})\n\nexport default allReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport allReducer from './reducers';\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}